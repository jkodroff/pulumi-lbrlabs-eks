# yaml-language-server: $schema=https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json
---
name: lbrlabs-eks
displayName: LBr Labs EKS
publisher: lbrlabs
pluginDownloadURL: "github://api.github.com/lbrlabs"
description: "A batteries included EKS cluster following best practices."
logoUrl: "https://raw.githubusercontent.com/lbrlabs/pulumi-lbrlabs-eks/main/assets/amazon-eks.png" #nolint:golint,lll
keywords:
  - eks
  - kubernetes
  - aws
  - lbrlabs
  - kind/component
  - category/cloud
repository: "https://github.com/lbrlabs/pulumi-lbrlabs-eks"
resources:
  lbrlabs-eks:index:Cluster:
    isComponent: true
    inputProperties:
      letsEncryptEmail:
        type: string
        description: The email address to use to issue certificates from Lets Encrypt.
      clusterSubnetIds:
        type: array
        items:
          type: string
      systemNodeSubnetIds:
        type: array
        items:
          type: string
      systemNodeInstanceTypes:
        type: array
        items:
          type: string
      systemNodeMaxCount:
        type: number
        description: The maximum number of nodes in the system autoscaling group.
      systemNodeMinCount:
        type: number
        description: The minimum number of nodes in the system autoscaling group.
      systemNodeDesiredCount:
        type: number
        description: The initial number of nodes in the system autoscaling group.
      enableOtel:
        type: boolean
        description: Whether to enable the OTEL Distro for EKS.
        default: false
        plain: true
      enableCloudWatchAgent:
        type: boolean
        description: Whether to enable cloudwatch container insights for EKS.
        default: false
        plain: true
      enableExternalDns:
        type: boolean
        description: Whether to enable external dns with route 53 integration.
        default: true
        plain: true
      enableCertManager:
        type: boolean
        description: Whether to enable cert-manager with route 53 integration.
        default: true
        plain: true
      lbType:
        type: "string"
        description: The type of loadbalancer to provision.
        default: "nlb"
      certificateArn:
        type: string
        description: The ARN of the certificate to use for the ingress controller.
      tags:
        type: object
        additionalProperties:
          type: string
        description: Key-value map of tags to apply to the cluster.
    requiredInputs:
      - clusterSubnetIds
      - systemNodeSubnetIds
    properties:
      clusterName:
        "type": string
        "description": The cluster name
      kubeconfig:
        "type": string
        "description": The kubeconfig for this cluster.
      controlPlane:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:eks%2Fcluster:Cluster"
        "description": The Cluster control plane
      oidcProvider:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:iam%2FopenIdConnectProvider:OpenIdConnectProvider"
        "description": The OIDC provider for this cluster.
      systemNodes:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:eks%2FnodeGroup:NodeGroup"
        "description": The system node group.
      # clusterIssuer:
      #   "$ref": "/kubernetes/v3.29.1/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource"
    required:
      - clusterName
      - controlPlane
      - oidcProvider
      - kubeconfig
      - systemNodes
  lbrlabs-eks:index:AttachedNodeGroup:
    isComponent: true
    inputProperties:
      clusterName:
        type: string
        description: The cluster name to attach the nodegroup tp.
      subnetIds:
        type: array
        items:
          type: string
      instanceTypes:
        type: array
        items:
          type: string
      diskSize:
        type: number
        description: The size of the disk to attach to the nodes.
        default: 20
      capacityType:
        type: string
        description: The capacity type of the nodegroup.
        default: "ON_DEMAND"
      tags:
        type: object
        additionalProperties:
          type: string
        description: Key-value map of tags to apply to the nodegroup.
      scalingConfig:
        "$ref": "/aws/v6.14.0/schema.json#/types/aws:eks%2FNodeGroupScalingConfig:NodeGroupScalingConfig"
      taints:
        type: "array"
        items:
          "$ref": "/aws/v6.14.0/schema.json#/types/aws:eks%2FNodeGroupTaint:NodeGroupTaint"
      labels:
        type: object
        additionalProperties:
          type: string
        description: "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed."
    requiredInputs:
      - clusterName
      - subnetIds
    properties:
      nodeGroup:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:eks%2FnodeGroup:NodeGroup"
      nodeRole:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:iam%2Frole:Role"
    required:
      - nodeGroup
      - nodeRole
  lbrlabs-eks:index:IamServiceAccountRole:
    isComponent: true
    inputProperties:
      oidcProviderArn:
        type: string
        description: The arn of the OIDC provider attached to your EKS cluster.
      oidcProviderUrl:
        type: string
        description: The URL of the OIDC provider attached to your EKS cluster.
      namespaceName:
        type: string
        description: The namespace to create the service account in.
      serviceAccountName:
        type: string
        description: The name of the service account to bind to the role
      tags: 
        type: object
        additionalProperties:
          type: string
        description: Key-value map of tags to apply to the service account.
    requiredInputs:
      - oidcProviderArn
      - oidcProviderUrl
      - namespaceName
      - serviceAccountName
    properties:
      role:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:iam%2Frole:Role"
    required:
      - role
  lbrlabs-eks:index:IamRoleMapping:
    isComponent: true
    inputProperties:
      roleArn:
        type: string
        description: The arn of the role to map to a Kubernetes group.
      username:
        type: string
        description: The username to assign to the rolemapping.
      groups:
        type: array
        items:
          type: string
        description: An array of groups to map the IAM role to.
    requiredInputs:
      - roleArn
      - username
      - groups
    properties:
    required:
  lbrlabs-eks:index:AttachedFargateProfile:
    isComponent: true
    inputProperties:
      clusterName:
        type: string
        description: The name of the cluster to assign the fargate profile to.
      subnetIds:
        type: array
        items:
          type: string
        description: The subnet IDs to use for the fargate profile.
      tags:
        type: object
        additionalProperties:
          type: string
        description: Key-value map for tags to apply to Fargate Profile.
      selectors:
        type: array
        items:
          "$ref": "/aws/v6.14.0/schema.json#/types/aws:eks%2FFargateProfileSelector:FargateProfileSelector"
    requiredInputs:
      - clusterName
      - subnetIds
      - selectors
    properties:
      role:
        "$ref": "/aws/v6.14.0/schema.json#/resources/aws:iam%2Frole:Role"
      profile:
         "$ref": "/aws/v6.14.0/schema.json#/resources/aws:eks%2FfargateProfile:FargateProfile"
    required:
      - role
      - profile
language:
  csharp:
    packageReferences:
      Pulumi: 3.*
      Pulumi.Aws: 6.*
      Pulumi.Kubernetes: 4.*
    rootNamespace: Lbrlabs.PulumiPackage
    namespaces:
      lbrlabs-eks: "Eks"
  go:
    generateResourceContainerTypes: true
    generics: "side-by-side"
    importBasePath: github.com/lbrlabs/pulumi-lbrlabs-eks/sdk/go/eks
  nodejs:
    dependencies:
      "@pulumi/aws": "^6.0.0"
      "@pulumi/kubernetes": "^4.0.0"
    devDependencies:
      typescript: "^3.7.0"
    packageName: "@lbrlabs/pulumi-eks"
  python:
    packageName: "lbrlabs_pulumi_eks"
    requires:
      pulumi: ">=3.0.0,<4.0.0"
      pulumi-aws: ">=6.0.0,<7.0.0"
      pulumi-kubernetes: ">=4.0.0,<5.0.0"
