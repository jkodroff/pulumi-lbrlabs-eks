// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Eks
{
    [EksResourceType("lbrlabs-eks:index:IamServiceAccountRole")]
    public partial class IamServiceAccountRole : global::Pulumi.ComponentResource
    {
        [Output("role")]
        public Output<Pulumi.Aws.Iam.Role> Role { get; private set; } = null!;


        /// <summary>
        /// Create a IamServiceAccountRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamServiceAccountRole(string name, IamServiceAccountRoleArgs args, ComponentResourceOptions? options = null)
            : base("lbrlabs-eks:index:IamServiceAccountRole", name, args ?? new IamServiceAccountRoleArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class IamServiceAccountRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The namespace to create the service account in.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The arn of the OIDC provider attached to your EKS cluster.
        /// </summary>
        [Input("oidcProviderArn", required: true)]
        public Input<string> OidcProviderArn { get; set; } = null!;

        /// <summary>
        /// The URL of the OIDC provider attached to your EKS cluster.
        /// </summary>
        [Input("oidcProviderUrl", required: true)]
        public Input<string> OidcProviderUrl { get; set; } = null!;

        /// <summary>
        /// The name of the service account to bind to the role
        /// </summary>
        [Input("serviceAccountName", required: true)]
        public Input<string> ServiceAccountName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of tags to apply to the service account.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public IamServiceAccountRoleArgs()
        {
        }
        public static new IamServiceAccountRoleArgs Empty => new IamServiceAccountRoleArgs();
    }
}
